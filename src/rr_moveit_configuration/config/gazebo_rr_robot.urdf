<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/steffen/bladerobot-meta/src/bladerobot/Planner/rr_robot_description/urdf/robot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rr_robot">
    <!-- world base link -->
    <link name="world">
        <origin rpy="0 0 0" xyz="0 0 0" />
    </link>
    <link name="rr_chassis">
        <inertial>
            <origin rpy="0 0 0" xyz="0.45171 -1.9114E-06 -0.0060107" />
            <mass value="120.39" />
            <inertia ixx="0.44337" ixy="0.00087842" ixz="-0.12544" iyy="31.837" iyz="-2.5044E-05" izz="31.906" />
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://rr_robot_description/include/chassis/meshes/visual.STL" />
            </geometry>
            <material name="rr_blue">
                <color rgba="0 0.62352941176 0.89019607843 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://rr_robot_description/include/chassis/meshes/collision.STL" />
            </geometry>
        </collision>
    </link>
    <joint name="world_to_rr_chassis" type="fixed">
        <parent link="world" />
        <child link="rr_chassis" />
        <origin rpy="0 0 0" xyz="0 0 0" />
    </joint>
    <!-- ********************* Tool holders ********************* -->
    <link name="th0" />
    <joint name="th0_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.95394 0.0875 0.12783" />
        <parent link="rr_chassis" />
        <child link="th0" />
    </joint>
    <link name="th1" />
    <joint name="th1_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.95394 -0.0875 0.12783" />
        <parent link="rr_chassis" />
        <child link="th1" />
    </joint>
    <link name="th2" />
    <joint name="th2_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.67894 0.175 0.12783" />
        <parent link="rr_chassis" />
        <child link="th2" />
    </joint>
    <link name="th3" />
    <joint name="th3_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.67894 0 0.12783" />
        <parent link="rr_chassis" />
        <child link="th3" />
    </joint>
    <link name="th4" />
    <joint name="th4_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.67894 -0.175 0.12783" />
        <parent link="rr_chassis" />
        <child link="th4" />
    </joint>
    <link name="th5" />
    <joint name="th5_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.40394 0.175 0.12783" />
        <parent link="rr_chassis" />
        <child link="th5" />
    </joint>
    <link name="th6" />
    <joint name="th6_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.40394 0 0.12783" />
        <parent link="rr_chassis" />
        <child link="th6" />
    </joint>
    <link name="th7" />
    <joint name="th7_joint" type="fixed">
        <origin rpy="-1.0611E-15 7.6478E-16 1.5708" xyz="0.40394 -0.175 0.12783" />
        <parent link="rr_chassis" />
        <child link="th7" />
    </joint>
    <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs: Ludovic Delval.

    Contributors to previous versions (in no particular order):

     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
    <!--
    NOTE: the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
    <transmission name="shoulder_pan_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="shoulder_pan_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="shoulder_pan_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="shoulder_lift_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="shoulder_lift_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="shoulder_lift_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="elbow_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="elbow_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="elbow_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_1_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_1_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_1_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_2_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_2_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_2_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_3_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_3_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_3_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <!-- links: main serial chain -->
    <link name="base_link" />
    <link name="base_link_inertia">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/visual/base.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/collision/base.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="4.0" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.0061063308908" ixy="0.0" ixz="0.0" iyy="0.0061063308908" iyz="0.0" izz="0.01125" />
        </inertial>
    </link>
    <link name="shoulder_link">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/visual/shoulder.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/collision/shoulder.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="7.778" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.03147431257693659" ixy="0.0" ixz="0.0" iyy="0.03147431257693659" iyz="0.0" izz="0.021875624999999996" />
        </inertial>
    </link>
    <link name="upper_arm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.220941" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/visual/upperarm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.220941" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/collision/upperarm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="12.93" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.306 0.0 0.175" />
            <inertia ixx="0.42175380379841093" ixy="0.0" ixz="0.0" iyy="0.42175380379841093" iyz="0.0" izz="0.03636562499999999" />
        </inertial>
    </link>
    <link name="forearm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.049042" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/visual/forearm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.049042" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/collision/forearm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="3.87" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.28615 0.0 0.049042" />
            <inertia ixx="0.11106969409710458" ixy="0.0" ixz="0.0" iyy="0.11106969409710458" iyz="0.0" izz="0.010884375" />
        </inertial>
    </link>
    <link name="wrist_1_link">
        <visual>
            <!-- TODO: Move this to a parameter -->
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1149" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/visual/wrist1.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1149" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/collision/wrist1.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.96" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.005108247956699999" ixy="0.0" ixz="0.0" iyy="0.005108247956699999" iyz="0.0" izz="0.005512499999999999" />
        </inertial>
    </link>
    <link name="wrist_2_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.1158" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/visual/wrist2.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -0.1158" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/collision/wrist2.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.96" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.0040792483683" ixy="0.0" ixz="0.0" iyy="0.0040792483683" iyz="0.0" izz="0.005512499999999999" />
        </inertial>
    </link>
    <link name="wrist_3_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0922" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/visual/wrist3.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0922" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10/collision/wrist3.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.202" />
            <origin rpy="0 0 0" xyz="0.0 0.0 -0.01525" />
            <inertia ixx="0.00011792166116465" ixy="0.0" ixz="0.0" iyy="0.00011792166116465" iyz="0.0" izz="0.00020452500000000002" />
        </inertial>
    </link>
    <!-- joints: main serial chain -->
    <joint name="base_link-base_link_inertia" type="fixed">
        <parent link="base_link" />
        <child link="base_link_inertia" />
        <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
    </joint>
    <joint name="shoulder_pan_joint" type="revolute">
        <parent link="base_link_inertia" />
        <child link="shoulder_link" />
        <origin rpy="0 0 0" xyz="0 0 0.1273" />
        <axis xyz="0 0 1" />
        <limit effort="330.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="2.0943951023931953" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="shoulder_lift_joint" type="revolute">
        <parent link="shoulder_link" />
        <child link="upper_arm_link" />
        <origin rpy="1.570796327 0 0" xyz="0 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="330.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="2.0943951023931953" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="elbow_joint" type="revolute">
        <parent link="upper_arm_link" />
        <child link="forearm_link" />
        <origin rpy="0 0 0" xyz="-0.612 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_1_joint" type="revolute">
        <parent link="forearm_link" />
        <child link="wrist_1_link" />
        <origin rpy="0 0 0" xyz="-0.5723 0 0.163941" />
        <axis xyz="0 0 1" />
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_2_joint" type="revolute">
        <parent link="wrist_1_link" />
        <child link="wrist_2_link" />
        <origin rpy="1.570796327 0 0" xyz="0 -0.1157 -2.373046667922381e-11" />
        <axis xyz="0 0 1" />
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_3_joint" type="revolute">
        <parent link="wrist_2_link" />
        <child link="wrist_3_link" />
        <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.0922 -1.891053610911353e-11" />
        <axis xyz="0 0 1" />
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
    <link name="base" />
    <joint name="base_link-base_fixed_joint" type="fixed">
        <!-- Note the rotation over Z of pi radians: as base_link is REP-103
           aligned (ie: has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
        <parent link="base_link" />
        <child link="base" />
    </joint>
    <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
    <link name="flange" />
    <joint name="wrist_3-flange" type="fixed">
        <parent link="wrist_3_link" />
        <child link="flange" />
        <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0" />
    </joint>
    <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
    <link name="tool0" />
    <joint name="flange-tool0" type="fixed">
        <!-- default toolframe: X+ left, Y+ up, Z+ front -->
        <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0" />
        <parent link="flange" />
        <child link="tool0" />
    </joint>
    <!-- <xacro:ur10_robot prefix="" joint_limited="true"
		 shoulder_pan_lower_limit="${(-3/2)*pi}" shoulder_pan_upper_limit="${(1/2)*pi}"
		 shoulder_lift_lower_limit="${-pi*(9/8)}" shoulder_lift_upper_limit="${pi/8}"
		 elbow_joint_lower_limit="${0.1}" elbow_joint_upper_limit="${pi*(7/8)}"
		 wrist_1_lower_limit="${-pi}" wrist_1_upper_limit="${pi}"
		 wrist_2_lower_limit="${-pi}" wrist_2_upper_limit="${pi}"
		 wrist_3_lower_limit="${-pi}" wrist_3_upper_limit="${pi}"
         transmission_hw_interface="$(arg transmission_hw_interface)"
         kinematics_file="${xacro.load_yaml('$(arg kinematics_config)')}"/> -->
    <!-- Connect tool0_controller to base using floating joint -->
    <!-- <link name="tool0_controller"/>
  <joint name="base_tool0_controller_joint" type="floating">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="base"/>
    <child link="tool0_controller"/>
  </joint> -->
    <link name="tcp0" />
    <joint name="tool0_to_tcp0" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0" />
        <parent link="tool0" />
        <child link="tcp0" />
    </joint>
    <link name="actual_tcp" />
    <joint name="tool0_to_actual_tcp" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0" />
        <parent link="tool0" />
        <child link="actual_tcp" />
    </joint>
    <!-- connect arm to chassis -->
    <joint name="chassis_to_arm" type="fixed">
        <parent link="rr_chassis" />
        <child link="base_link" />
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
    </joint>
    <!--<link name="tcp" />-->
    <!--<joint name="tcp0_to_tcp" type="fixed" >-->
    <!--<origin xyz="0 0 0" rpy="0 0 0"/>-->
    <!--<parent link="tcp0"/>-->
    <!--<child link="tcp"/>-->
    <!--</joint>-->
    <link name="rr_tool_adapter">
        <inertial>
            <origin rpy="0 0 0" xyz="0.02883 0.016356 0.020893" />
            <mass value="1.4111" />
            <inertia ixx="0.00092275" ixy="-0.00085642" ixz="0.0001456" iyy="0.0020383" iyz="5.6501E-05" izz="0.0021049" />
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://rr_robot_description/include/tool_adapter/meshes/visual.STL" />
            </geometry>
            <material name="">
                <color rgba="0.89804 0.91765 0.92941 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="-0.0225 -0.1 0" />
            <geometry>
                <mesh filename="package://rr_robot_description/include/tool_adapter/meshes/collision.STL" />
            </geometry>
        </collision>
    </link>
    <joint name="tcp0_to_rr_tool_adapter" type="fixed">
        <parent link="tcp0" />
        <child link="rr_tool_adapter" />
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
    </joint>
    <link name="acp" />
    <joint name="rr_tool_adapter_to_acp" type="fixed">
        <origin rpy="2.0464E-16 1.3198E-17 -1.0472" xyz="0 0 0.0665" />
        <parent link="rr_tool_adapter" />
        <child link="acp" />
        <axis xyz="0 0 0" />
    </joint>
    <link name="tcp" />
    <joint name="tcp_attach" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0" />
        <parent link="acp" />
        <child link="tcp" />
    </joint>
    <gazebo>
        <plugin name="gazebo_ros_control">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
</robot>

