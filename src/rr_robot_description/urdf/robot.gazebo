<?xml version="1.0"?>
<robot>
    <!-- Gazebo materials-->
    <gazebo reference="rr_chassis">
        <material>Gazebo/SkyBlue</material>
    </gazebo>
    <gazebo reference="rope_drive_le">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="rope_drive_te">
        <material>Gazebo/Grey</material>
    </gazebo>
    <gazebo reference="bot_wheel_le">
        <material>Gazebo/Grey</material>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>
    <gazebo reference="bot_wheel_te">
        <material>Gazebo/Grey</material>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>
    <gazebo reference="top_wheel_le">
        <material>Gazebo/Grey</material>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>
    <gazebo reference="top_wheel_te">
        <material>Gazebo/Grey</material>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>
    <gazebo reference="vacuum_sheet">
        <material>Gazebo/DarkGrey</material>
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
    </gazebo>

    <!-- Joint Friction coefficients -->
    
    <!-- camera plugins -->
    <gazebo reference="tool_camera">
        <sensor type="camera" name="tool_camera">
            <update_rate>30.0</update_rate>
            <camera name="tool_camera">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                         That pixel's noise value is added to each of its color
                         channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>rr_robot/tool_camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>tool_camera</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="left_camera">
        <sensor type="camera" name="left_camera">
            <update_rate>30.0</update_rate>
            <camera name="left_camera">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                         That pixel's noise value is added to each of its color
                         channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>rr_robot/left_camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>tool_camera</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="top_camera">
        <sensor type="camera" name="top_camera">
            <update_rate>30.0</update_rate>
            <camera name="top_camera">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                         That pixel's noise value is added to each of its color
                         channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>rr_robot/top_camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>left_camera</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="right_camera">
        <sensor type="camera" name="right_camera">
            <update_rate>30.0</update_rate>
            <camera name="right_camera">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                         That pixel's noise value is added to each of its color
                         channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>rr_robot/right_camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>top_camera</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- laser scanner plugin -->
    <gazebo reference="laser">
        <sensor type="ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>20</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-0.78539</min_angle>
                        <max_angle>0.78539</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.15</min>
                    <max>0.35</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>/laser/scan</topicName>
                <frameName>laser</frameName>
            </plugin>
        </sensor>
    </gazebo>

    <!-- IMU -->
<!--    <gazebo>-->
<!--        <plugin name="gazebo_ros_imu_controller" filename="libgazebo_ros_imu.so">-->
<!--            <robotNamespace>/gurdy</robotNamespace>-->
<!--            <topicName>imu/data</topicName>-->
<!--            <serviceName>imu/service</serviceName>-->
<!--            <bodyName>base_link</bodyName>-->
<!--            <gaussianNoise>0</gaussianNoise>-->
<!--            <rpyOffsets>0 0 0</rpyOffsets>-->
<!--            <updateRate>10.0</updateRate>-->
<!--            <alwaysOn>true</alwaysOn>-->
<!--            <gaussianNoise>0</gaussianNoise>-->
<!--        </plugin>-->
<!--    </gazebo>-->

    <!-- Control plugin -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/rr_robot</robotNamespace>
        </plugin>
    </gazebo>
    
    <gazebo>
        <plugin name="winch_force_plugin_te" filename="libwinch_force_plugin.so">
            <rope_fixture>10 0 0</rope_fixture>
            <rope_joint>rope_springed_joint_te</rope_joint>
            <radius_topic>rope_drive/current_drive_radius</radius_topic>
            <motor_topic>/left_motor/motor_state</motor_topic>
            <one_meter_stiffness>100000</one_meter_stiffness>
            <kp>100</kp>
            <kd>10</kd>
            <ki>10</ki>
        </plugin>
    </gazebo>

    <gazebo>
        <plugin name="winch_force_plugin_le" filename="libwinch_force_plugin.so">
            <rope_fixture>10 0 0</rope_fixture>
            <rope_joint>rope_springed_joint_le</rope_joint>
            <radius_topic>rope_drive/current_drive_radius</radius_topic>
            <motor_topic>/right_motor/motor_state</motor_topic>
            <one_meter_stiffness>100000</one_meter_stiffness> 
            <kp>100</kp>
            <kd>10</kd>
            <ki>10</ki>
        </plugin>
    </gazebo>

    <!-- <gazebo>
        <plugin name="vacuum_plugin" filename="libvacuum_plugin.so">
            <edge>0.076674</edge>
            <center>0.121469</center>
            <mu>0.00001</mu>
            <N_v>368.93</N_v>
        </plugin>
    </gazebo> -->

    <gazebo>
        <plugin name="winch_torque_plugin" filename="libwinch_torque_plugin.so">
        </plugin>
    </gazebo>
    
    <!-- Attach rotational spring to suspension-->
    <gazebo reference="bot_pivot_joint_le">
        <springStiffness>50</springStiffness>
        <springReference>-0.174533</springReference>
    </gazebo>

    <gazebo reference="bot_pivot_joint_te">
        <springStiffness>50</springStiffness>
        <springReference>-0.174533</springReference>
    </gazebo>

    <gazebo reference="top_pivot_joint_le">
        <springStiffness>50</springStiffness>
        <springReference>1.0</springReference>
    </gazebo>

    <gazebo reference="top_pivot_joint_te">
        <springStiffness>50</springStiffness>
        <springReference>1.0</springReference>
    </gazebo>

    <!-- Attach spring to rope prismatic joing -->
    <gazebo reference="rope_springed_joint_te">
        <springStiffness>500</springStiffness>
        <springReference>0.0</springReference>
    </gazebo>
    <gazebo reference="rope_springed_joint_le">
        <springStiffness>500</springStiffness>
        <springReference>0.0</springReference>
    </gazebo>
</robot>